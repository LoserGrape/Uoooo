(function() {
  if (window._jsExecPanel) { return; } // prevent duplicates
  window._jsExecPanel = true;

  // --- Styles & panel ---
  const panel = document.createElement("div");
  panel.style.cssText = `
    position: fixed;
    top: 60px; left: 60px;
    width: 640px; height: 420px;
    background: #111; color: #eee;
    font-family: monospace;
    border: 2px solid #c00;
    border-radius: 8px;
    resize: both;
    overflow: hidden;
    z-index: 999999;
    display: flex; flex-direction: column;
  `;

  // --- Title bar ---
  const titleBar = document.createElement("div");
  titleBar.textContent = "JS EXECUTOR";
  titleBar.style.cssText = `
    background: #300;
    padding: 4px 8px;
    cursor: move;
    user-select: none;
  `;
  panel.appendChild(titleBar);

  // --- Body layout ---
  const body = document.createElement("div");
  body.style.cssText = "flex:1; display:flex; overflow:hidden;";
  panel.appendChild(body);

  // Left column (save list + save button)
  const leftCol = document.createElement("div");
  leftCol.style.cssText = `
    width: 120px; border-right:2px solid #c00;
    display:flex; flex-direction:column;
  `;
  body.appendChild(leftCol);

  const saveBtn = document.createElement("button");
  saveBtn.textContent = "save";
  saveBtn.style.cssText = `
    background:#222; color:#eee; border:none;
    border-bottom:2px solid #c00;
    padding:6px; cursor:pointer;
  `;
  leftCol.appendChild(saveBtn);

  const saveList = document.createElement("div");
  saveList.style.cssText = "flex:1; overflow:auto;";
  leftCol.appendChild(saveList);

  // Editor
  const editor = document.createElement("textarea");
  editor.style.cssText = `
    flex:1; background:#000; color:#0f0;
    border:none; outline:none; resize:none;
    padding:8px; font-family: monospace; font-size: 13px;
  `;
  body.appendChild(editor);

  // Footer buttons
  const footer = document.createElement("div");
  footer.style.cssText = `
    border-top:2px solid #c00;
    display:flex;
  `;
  panel.appendChild(footer);

  const btn = (txt) => {
    const b = document.createElement("button");
    b.textContent = txt;
    b.style.cssText = `
      flex:1; background:#222; color:#eee;
      border:none; border-right:2px solid #c00;
      padding:6px; cursor:pointer;
    `;
    return b;
  };

  const clearBtn = btn("Clear");
  const execBtn = btn("Execute!!1");
  footer.append(clearBtn, execBtn);

  document.body.appendChild(panel);

  // --- Dragging logic ---
  let isDrag = false, offsetX, offsetY;
  titleBar.addEventListener("mousedown", e => {
    isDrag = true; offsetX = e.clientX - panel.offsetLeft; offsetY = e.clientY - panel.offsetTop;
  });
  document.addEventListener("mouseup", () => isDrag=false);
  document.addEventListener("mousemove", e => {
    if (isDrag) {
      panel.style.left = (e.clientX - offsetX) + "px";
      panel.style.top  = (e.clientY - offsetY) + "px";
    }
  });

  // --- Storage helpers ---
  const KEY = "jsExecSaves";
  let saves = JSON.parse(localStorage.getItem(KEY) || "{}");

  function renderSaves() {
    saveList.innerHTML = "";
    Object.keys(saves).forEach(name => {
      const tab = document.createElement("div");
      tab.textContent = name;
      tab.style.cssText = `
        padding:4px; border-bottom:1px solid #333;
        cursor:pointer; white-space:nowrap;
        overflow:hidden; text-overflow:ellipsis;
      `;
      let lastClick = 0;
      tab.addEventListener("click", () => {
        let now = Date.now();
        if (now - lastClick < 400) {
          // double click -> delete
          const ans = prompt("DE1ETE? [yes/no]");
          if (ans && ans.toLowerCase().trim() === "yes") {
            delete saves[name];
            localStorage.setItem(KEY, JSON.stringify(saves));
            renderSaves();
          }
        } else {
          // single click -> load
          editor.value = saves[name];
        }
        lastClick = now;
      });
      saveList.appendChild(tab);
    });
  }
  renderSaves();

  // --- Button actions ---
  saveBtn.onclick = () => {
    const name = prompt("S4VE AS!?");
    if (!name) return;
    saves[name] = editor.value;
    localStorage.setItem(KEY, JSON.stringify(saves));
    renderSaves();
  };

  clearBtn.onclick = () => { editor.value = ""; };
  execBtn.onclick = () => {
    try {
      (0, eval)(editor.value);
    } catch(err) {
      alert("Error: " + err);
    }
  };
})();
